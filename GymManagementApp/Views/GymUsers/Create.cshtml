@model GymManagementApp.Models.GymUser

@{
    ViewData["Title"] = "Dodaj użytkownika";
}

<h1>Dodaj użytkownika</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Imię i nazwisko</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MembershipId" class="control-label">Karnet</label>
                <select asp-for="MembershipId" class="form-control" asp-items="ViewBag.Memberships">
                    <option disabled selected>Wybierz karnet</option>
                </select>
                <span asp-validation-for="MembershipId" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Dodaj</button>
            </div>
        </form>


    </div>
</div>
<div
    asp-validation-summary="All" class="text-danger">
</div>
<div>
    <a asp-action="Index">Powrót do listy</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $("form").removeData("validator").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");
        });
    </script>
}
